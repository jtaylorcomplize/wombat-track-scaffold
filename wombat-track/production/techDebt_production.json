[
  {
    "title": "Unused _context parameter in DocumentSurface.tsx",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 113:53",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused parameter - safe to suppress with ESLint disable",
    "priority": "src/components/surfaces/DocumentSurface.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _context parameter in ExecuteSurface.tsx",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 72:53",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused parameter - safe to suppress with ESLint disable",
    "priority": "src/components/surfaces/ExecuteSurface.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _context parameter in GovernSurface.tsx",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 197:53",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused parameter - safe to suppress with ESLint disable",
    "priority": "src/components/surfaces/GovernSurface.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _context parameter in IntegrateSurface.tsx",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 25:53",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused parameter - safe to suppress with ESLint disable",
    "priority": "src/components/surfaces/IntegrateSurface.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _context parameter in PlanSurface.tsx",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 48:53",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused parameter - safe to suppress with ESLint disable",
    "priority": "src/components/surfaces/PlanSurface.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused IntegrateSurface prop parameters",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Lines 19-22",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Unused _currentPhase",
    "priority": "_currentStep",
    "status": "_onPhaseChange",
    "updatedAt": "_onStepChange - can be removed from interface"
  },
  {
    "title": "Unused _projects parameter in EnhancedProjectSidebar",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 39:3",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Component uses mockProjects instead - can remove from props",
    "priority": "src/components/layout/EnhancedProjectSidebar.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _error parameter in SendToGitHubButton",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 40:14",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Intentionally unused in catch block - safe to suppress",
    "priority": "src/components/SendToGitHubButton.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused editor parameter in DocsEditor callback",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:24 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 58:18",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Editor parameter in callback - check if needed or can be removed",
    "priority": "src/components/docs/DocsEditor.tsx",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused _databaseId parameter in driveMemorySync",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 240:60",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Already marked with underscore - safe to suppress",
    "priority": "src/utils/driveMemorySync.ts",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Unused parameters in templateDispatcher.ts",
    "canonicalUse": "Yes",
    "category": "Dead Code",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 3:39",
    "linkedPhase": "3:59",
    "notes": "",
    "originFile": "",
    "priority": "templateId",
    "status": "templateName - appears to be stub function",
    "updatedAt": "implement or remove"
  },
  {
    "title": "Unused parameters in aiHelpers.ts",
    "canonicalUse": "Yes",
    "category": "Dead Code",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Lines 2",
    "linkedPhase": "6",
    "notes": "10",
    "originFile": "",
    "priority": "",
    "status": "projectId",
    "updatedAt": "stepId"
  },
  {
    "title": "Any type usage in agent.ts interfaces",
    "canonicalUse": "Yes",
    "category": "Structural",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "2-4 hours",
    "linkedPR": "Lines 14:29",
    "linkedPhase": "34:29",
    "notes": "52:29",
    "originFile": "",
    "priority": "",
    "status": "Critical - affects multiple components. Define proper Agent interfaces for type safety",
    "updatedAt": "src/types/agent.ts"
  },
  {
    "title": "Any type in ProjectContext.tsx",
    "canonicalUse": "Yes",
    "category": "Structural",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 12:13",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Core functionality - context should be properly typed",
    "priority": "src/contexts/ProjectContext.tsx",
    "status": "High",
    "updatedAt": "Open"
  },
  {
    "title": "Any type in governance.ts event details",
    "canonicalUse": "Yes",
    "category": "Structural",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 19:13",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Event typing for audit trails - important for governance",
    "priority": "src/types/governance.ts",
    "status": "Medium",
    "updatedAt": "Open"
  },
  {
    "title": "Any type in AgentMesh.tsx component",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 399:49",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Component state typing - should be properly defined",
    "priority": "src/components/mesh/AgentMesh.tsx",
    "status": "Medium",
    "updatedAt": "Open"
  },
  {
    "title": "Any type in mockProjects.ts",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "<30min",
    "linkedPR": "Line 8:16",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Mock data structure - can be easily typed",
    "priority": "src/data/mockProjects.ts",
    "status": "Low",
    "updatedAt": "Open"
  },
  {
    "title": "Any type in getIntegrationHealth.ts",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 11:29",
    "linkedPhase": "",
    "notes": "",
    "originFile": "API response typing - should define interface for health data",
    "priority": "src/lib/getIntegrationHealth.ts",
    "status": "Medium",
    "updatedAt": "Open"
  },
  {
    "title": "Any type in claudeGizmoComm.ts",
    "canonicalUse": "Yes",
    "category": "Structural",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "1-2 hours",
    "linkedPR": "Line 10:13",
    "linkedPhase": "",
    "notes": "",
    "originFile": "Communication interface - important for AI agent interactions",
    "priority": "src/utils/claudeGizmoComm.ts",
    "status": "Medium",
    "updatedAt": "Open"
  },
  {
    "title": "Import style violations in project.ts",
    "canonicalUse": "Yes",
    "category": "Lint",
    "createdAt": "July 29",
    "effortEstimate": "2025 11:25 AM",
    "lineReference": "<30min",
    "linkedPR": "Lines 5:47",
    "linkedPhase": "11:45",
    "notes": "22:44",
    "originFile": "",
    "priority": "",
    "status": "Convert import() type annotations to proper import statements",
    "updatedAt": "src/types/project.ts"
  }
]